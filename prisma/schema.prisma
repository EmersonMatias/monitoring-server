// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

enum AccountType {
  user
  admin
}

enum Situation {
  OK
  PANIC
}

model User {
  id             Int          @id @default(autoincrement())
  name           String       @db.VarChar(150)
  dateOfBirth    DateTime     @db.Date
  rg             String       @db.VarChar(9)
  cpf            String       @db.VarChar(11)
  entryTime      DateTime     @db.Time()
  departureTime  DateTime     @db.Time()
  workOnSaturday Boolean      @default(false)
  workOnSunday   Boolean      @default(false)
  agencyId       Int
  login          String       @db.VarChar(100) @unique
  password       String       @db.VarChar(150)
  accountType    AccountType  @default(user)
  contigency     Contingency? @relation("UserContigency")
  status         Status?      @relation("UserStatus")
  checkpoint     Checkpoint[] @relation("UserCheckPoint")
  messages       Messages[]   @relation("UserMessage")
  agency         Agency       @relation("UserAgency", fields: [agencyId], references: [id])
}

model Agency {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  User       User[]       @relation("UserAgency")
  Checkpoint Checkpoint[] @relation("UserAgency")
  Messages   Messages[]   @relation("UserAgency")
}

model Checkpoint {
  id          Int       @id @default(autoincrement())
  date        DateTime  @db.Date
  arrived     Boolean?  @default(false)
  arrivalTime DateTime? @db.Time()
  userId      Int
  agencyId    Int
  agency      Agency    @relation("UserAgency", fields: [agencyId], references: [id])
  user        User      @relation("UserCheckPoint", fields: [userId], references: [id])
}

model Messages {
  id       Int      @id @default(autoincrement())
  dateTime DateTime 
  message  String   @default("")
  response String   @default("")
  viewed   Boolean? @default(false)
  userId   Int
  agencyId Int
  user     User     @relation("UserMessage", fields: [userId], references: [id])
  agency   Agency   @relation("UserAgency", fields: [agencyId], references: [id])
}

model Status {
  id        Int       @id @default(autoincrement())
  timestamp DateTime  @db.Timestamp()
  situation Situation @default(OK)
  frequency Int       @default(60)
  userId    Int       @unique
  user      User      @relation("UserStatus", fields: [userId], references: [id])
}

model Contingency {
  id        Int       @id @default(autoincrement())
  active    Boolean   @default(false)
  timestamp DateTime  @db.Timestamp()
  frequency Int       @default(60)
  situation Situation @default(OK)
  userId    Int       @unique
  user      User      @relation("UserContigency", fields: [userId], references: [id])
}

model Alert {
  id       Int      @id @default(autoincrement())
  name     String
  dateTime DateTime
  viewed   Boolean  @default(false)
}
